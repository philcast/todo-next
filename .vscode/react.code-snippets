{
  // Place your todo-next workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "Typescript React Functional Component": {
    "scope": "typescriptreact",
    "prefix": "fc",
    "body": [
      "interface ${TM_FILENAME_BASE:/pascalcase}Props {",
      "  $1",
      "}",
      "",
      "export const ${TM_FILENAME_BASE:/pascalcase} = ({$2}: ${TM_FILENAME_BASE:/pascalcase}Props) => {",
      "  return (",
      "    <div>",
      "      ${TM_FILENAME_BASE:/pascalcase}",
      "    </div>",
      "  );",
      "};",
    ],
    "description": "Typescript React Functional Component"
  },
  "Typescript React Functional Component With Children": {
    "scope": "typescriptreact",
    "prefix": "fcc",
    "body": [
      "import { PropsWithChildren } from 'react';",
      "",
      "interface ${TM_FILENAME_BASE:/pascalcase}Props {",
      "  $1",
      "}",
      "",
      "export const ${TM_FILENAME_BASE:/pascalcase} = ({children, $2}: PropsWithChildren<${TM_FILENAME_BASE:/pascalcase}Props>) => {",
      "  return (",
      "    <div>",
      "      <div>",
      "        ${TM_FILENAME_BASE:/pascalcase}",
      "      </div>",
      "      {children}",
      "    </div>",
      "  );",
      "};",
    ],
    "description": "Typescript React Functional Component With Children"
  }
}
